//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_52
.address_size 64

	// .globl	add_kernel_f32

.visible .entry add_kernel_f32(
	.param .u64 add_kernel_f32_param_0,
	.param .u64 add_kernel_f32_param_1,
	.param .u64 add_kernel_f32_param_2,
	.param .u32 add_kernel_f32_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [add_kernel_f32_param_0];
	ld.param.u64 	%rd2, [add_kernel_f32_param_1];
	ld.param.u64 	%rd3, [add_kernel_f32_param_2];
	ld.param.u32 	%r2, [add_kernel_f32_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	add.ftz.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB0_2:
	ret;

}
	// .globl	add_kernel_f32x4
.visible .entry add_kernel_f32x4(
	.param .u64 add_kernel_f32x4_param_0,
	.param .u64 add_kernel_f32x4_param_1,
	.param .u64 add_kernel_f32x4_param_2,
	.param .u32 add_kernel_f32x4_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [add_kernel_f32x4_param_0];
	ld.param.u64 	%rd2, [add_kernel_f32x4_param_1];
	ld.param.u64 	%rd3, [add_kernel_f32x4_param_2];
	ld.param.u32 	%r2, [add_kernel_f32x4_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	shl.b32 	%r1, %r6, 2;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.v4.f32 	{%f1, %f2, %f3, %f4}, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.v4.f32 	{%f9, %f10, %f11, %f12}, [%rd8];
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	add.ftz.f32 	%f17, %f4, %f12;
	add.ftz.f32 	%f18, %f3, %f11;
	add.ftz.f32 	%f19, %f2, %f10;
	add.ftz.f32 	%f20, %f1, %f9;
	st.global.v4.f32 	[%rd10], {%f20, %f19, %f18, %f17};

$L__BB1_2:
	ret;

}
	// .globl	add_kernel_f16
.visible .entry add_kernel_f16(
	.param .u64 add_kernel_f16_param_0,
	.param .u64 add_kernel_f16_param_1,
	.param .u64 add_kernel_f16_param_2,
	.param .u32 add_kernel_f16_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [add_kernel_f16_param_0];
	ld.param.u64 	%rd2, [add_kernel_f16_param_1];
	ld.param.u64 	%rd3, [add_kernel_f16_param_2];
	ld.param.u32 	%r2, [add_kernel_f16_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB2_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	// begin inline asm
	cvt.rzi.s32.f16 %r6, %rs1;
	// end inline asm
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.u16 	%rs2, [%rd8];
	// begin inline asm
	cvt.rzi.s32.f16 %r7, %rs2;
	// end inline asm
	and.b32  	%r9, %r7, %r6;
	xor.b32  	%r10, %r7, %r6;
	shr.s32 	%r11, %r10, 1;
	add.s32 	%r8, %r11, %r9;
	// begin inline asm
	cvt.rn.f16.s32 %rs3, %r8;
	// end inline asm
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.u16 	[%rd10], %rs3;

$L__BB2_2:
	ret;

}

